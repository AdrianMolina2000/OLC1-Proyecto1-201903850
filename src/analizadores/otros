/*
 * Analizador Sintactico
 * Adrian Samuel Molina Cabrera
 * 201930850
 */

package analizadores; 
import java_cup.runtime.*;

parser code 
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }  
:} 

terminal String DPUNTO, ASIGNAR, RANGO, PTCOMA, COMA, LLAIZQ, LLADER;
terminal String CONCAT, CEROMAS, DISYUNCION, SEPARADOR;
terminal String ENTERO, LOWER, UPPER, LOPPER, LEXEM,IDENTIFICADOR, COMILLADOBLE;
terminal String CONJUNTO;

non terminal ini;
non terminal instrucciones, instruccion;
non terminal conjuntos, listaL, listaN, expresiones, lexemas;

precedence left LLAIZQ, LLADER,CEROMAS, CONCAT, DISYUNCION;

start with ini; 
ini::=
     instrucciones
    |error instrucciones
    |error
;
  
instrucciones ::=
    LLAIZQ instruccion LLADER instrucciones
   |LLAIZQ instruccion LLADER
;

instruccion ::=
   |CONJUNTO DPUNTO IDENTIFICADOR:a {:System.out.print("nombre del conjunto: "+a);:} ASIGNAR conjuntos:b PTCOMA
   |IDENTIFICADOR:a {:System.out.print("nombre de la expresion: "+a);:} ASIGNAR expresiones:b PTCOMA
   |IDENTIFICADOR:a {:System.out.print("nombre de la expresion: "+a);:} ASIGNAR expresiones:b PTCOMA instruccion
   |SEPARADOR lexemas
;
